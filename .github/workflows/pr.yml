name: Pull request
on:
  pull_request:
    branches: [ master, prod, stage, qa**, ci** ]
env:
  BRANCH: ${{ github.base_ref }}

jobs:
  Integration-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Git diff
        run: |
          git remote add ssh-origin "https://github.com/$GITHUB_REPOSITORY"
          git fetch ssh-origin
          mkdir -p ${{ github.workspace }}/artifact
          DIFFS=$(git diff ssh-origin/${{ env.BRANCH }} HEAD | grep "^-\s\|^+\s")
          echo "$DIFFS"
          echo "$DIFFS" > ${{ github.workspace }}/artifact/git_diff.txt
      - name: Git diff cache
        uses: actions/cache@v2
        id: git-diff-cache
        with:
          path: ${{ github.workspace }}/artifact/git_diff.txt
          key: git-diff-${{ hashFiles('**/artifact/git_diff.txt') }}
          restore-keys: |
            git-diff-
      - name: PR, no new diffs
        if: ${{ steps.git-diff-cache.outputs.cache-hit == 'true' }}
        run: echo "No new diffs!"
      - name: Setup Node.js ${{ matrix.node-version }}
        if: ${{ steps.git-diff-cache.outputs.cache-hit != 'true' }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set Node.js packages yarn cache directory
        if: ${{ steps.git-diff-cache.outputs.cache-hit != 'true' }}
        id: yarn-cache-dir
        run: echo ::set-output name=CACHE_DIR::$(yarn cache dir)
      - name: Node.js yarn cache
        if: ${{ steps.git-diff-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir.outputs.CACHE_DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn
      - name: Node.js modules cache
        if: ${{ steps.git-diff-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache@v2
        id: modules-cache
        with:
          path: ${{ github.workspace }}/node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-modules
      - name: Install Node.js packages
        if: ${{ steps.git-diff-cache.outputs.cache-hit != 'true' && steps.modules-cache.outputs.cache-hit != 'true' }}
        run: yarn install
      - name: Set lint and test results script
        if: ${{ steps.git-diff-cache.outputs.cache-hit != 'true' }}
        uses: actions/github-script@v2
        with:
          script: |
            const { execSync } = require('child_process');
            try {
              console.log(`${execSync('yarn test', { stdio: 'pipe' })}`);
            } catch ({ stdout, stderr }) {
              core.setFailed(`${stdout}\n${stderr}`);
            }
      - name: Code coverage
        if: ${{ steps.git-diff-cache.outputs.cache-hit != 'true' && success() }}
        uses: codecov/codecov-action@v1
      - name: Confirm beta integration
        if: ${{ steps.git-diff-cache.outputs.cache-hit != 'true' && success() }}
        uses: actions/github-script@v2
        with:
          script: |
            const { execSync } = require('child_process');
            try {
              console.log(`${execSync('yarn build', { stdio: 'pipe' })}`);
            } catch ({ stdout, stderr }) {
              core.setFailed(`${stdout}\n${stderr}`);
            }
        env:
          BUILD_STAGE: Beta
      - name: Confirm stable integration
        if: ${{ steps.git-diff-cache.outputs.cache-hit != 'true' && success() }}
        uses: actions/github-script@v2
        with:
          script: |
            const { execSync } = require('child_process');
            try {
              console.log(`${execSync('yarn build', { stdio: 'pipe' })}`);
            } catch ({ stdout, stderr }) {
              core.setFailed(`${stdout}\n${stderr}`);
            }
        env:
          BUILD_STAGE: Stable
